<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAGBgAAAEAIACICQAAFgAAACgAAAAYAAAAMAAAAAEAIAAAAAAAAAkAAAAAAAAAAAAAAAAAAAAA
        AAD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8AAAAAAAAAAAAAAAABAAAABgAA
        AA0AAAATAAAAGAAAABoAAAAZAAAAGAAAABYAAAATAAAAEAAAAA0AAAAKAAAABwAAAAUAAAACAAAAAQAA
        AAAAAAAAAAAAAP///wD///8AAAAAAAAAAAAAAAACAAAACwAAABkAAAAmAAAAMAFAAIUBVwDMACQAVgAA
        ACsAAAAmAAAAIAAAABoAAAAUAAAADgAAAAkAAAAEAAAAAQAAAAAAAAAAAAAAAP///wD///8AAAAAAAAA
        AAAAAAABAAAABgAAAA0AAAATAkcAgQNfAMwk2xP/AlsBwQEXADIAAAATAAAAEAAAAA0AAAAKAAAABwAA
        AAUAAAACAAAAAQAAAAAAAAAAAAAAAP///wD///8AAAAAAAAAAAAAAAAAAAAAAAQ6AAAGawBzBWcAzCnY
        GP8i1hH/FaML6ANfAKkCRwALARgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//
        /wD///8ACEgAAAdFAAAGQwAAC38AAAh2AHMIcgDMLtUd/yLREf8i0RH/ItER/xGNCN4EYwCNBGQAAARP
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///wD///8AD48AAA2KAAAMhQAAC4AAcwt+
        AMw10yT/IssR/yLLEf8iyxH/IssR/yLIEv4MfgXXBWgAaQZtAAAHcQAABDkAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP///wD///8AD48AAA2KAAAMhgBzDIQAzEfONv8ixBH/IsQR/yLEEf8syRv/I8QS/yLE
        Ef8hvBH6C3kD0AZuAEIHcQAAB3EAAAdxAAAEOQAAAAAAAAAAAAAAAAAAAAAAAP///wD///8AD48AAA2L
        AHMNiQDMWM9H/0K8Mf8pvRj/Ir0R/zzMK/9h1VT/M8ci/yO9Ev8ivRH/H64Q9Ap3AcUIdAAkCXcAAAl5
        AAAJeQAACXkAAAl5AAAJeQAACXkAAP///wD///8AD5AAcw6OAMxd1Ez/RLsz/0S7M/8/uy7/Rsw1/wyH
        AMwMhQDMXshR9jDAH/8ithH/IrYR/x2jDusKewCyCn0ADwuAAAALgAAAC4AAAAuAAAALgAAAC4AAAP//
        /wD///8AD5MAzGHYUP9EuzP/RLsz/0S7M/9d1Ez/DowAzA2KAHMNiQBoEo4Fz2TNV/ouuB3/Iq8R/yOv
        Ev8amAziC4AAmAuAAAILgAAAC4AAAAuAAAALgAAAC4AAAP///wD///8AEJYAUBCVAMxk21P/RLsz/2HY
        UP8PkADMD48Acw2KAAANiQAADowAcxiWCtVoz1v9K7Aa/yKpEf8jqRL+FZAJ2QyEAHYMhgAADIcAAAyH
        AAAMhwAADIcAAP///wD///8AEJYAABGYAFARlwDMZt1V/xCVAMwQlABzD48AAA2KAAAOjAAADo4AAA6O
        AIUioBLca89e/yenFv8ioxH/JKMT+xONBtIMhgBODIcAAAyHAAAMhwAADIcAAP///wD///8AEJYAABGY
        AAARmwBQEZkAzBGYAHMQlAAAD48AAA2KAAAOjwAADo8AAA+QAAcPkQCgLqse5GHJUv8loBT/Ip4R/yOe
        E/YQjAPJDYkALA2KAAANiwAADYsAAP///wD///8AEJYAABGYAAARmwAAEZoAABGYAAAQlAAAD48AAA2K
        AAAOjwAADo8AAA+QAAAPkgAUD5MAtUzBPOxczUz/O7Mq/zmwKP8vqSDuDowBug6NABYOjwAADo8AAP//
        /wD///8AEJYAABGYAAARmwAAEZoAABGYAAAQlAAAD48AAA6OAAAPkwAAD5MAABCUAAAQlQAAEJYAJxOY
        A8ZVz0X0XdRM/1DHP/9Qxz//NLAk5Q6OAKEOjwAGDo8AAP///wD///8AEJYAABGYAAARmwAAEZoAABGY
        AAAQlAAAD48AAA+RAAAQlwAAEJcAABCXAAAQlwAAEJcAABGZAEIanwnPYdpQ+V3UTP9VzET/VcxE/ymn
        GdwPkQCCD5EAAP///wD///8AEJYAABGYAAARmwAAEZoAABGYAAAQlAAAD48AAA+RAAAQlwAAEJcAABCX
        AAAQlwAAEJcAABGZAAARmwBjI6gS1WriWf1f1k7/WtFJ/1jQR/0foQ/VEJQAW////wD///8AEJYAABGY
        AAARmwAAEZoAABGYAAAQlAAAD48AABCTAAARmgAAEZoAABGaAAARmgAAEZoAABKbAAASnAAAEp0AhTG1
        H9xv5l7/YdhQ/2PaUv9j3FL4EJcAzP///wD///8ABCYAAA1yAAARmwAAEZoAABGYAAAMcAAABCQAAAAA
        AAAJTwAAEp0AABKdAAASnQAAEp0AABKdAAASnQAAEp4ABxKfAKBNzDzpc+pi/3PqYv8RmwDMEZoAUP//
        /wD///8AAAAAAAAAAAAFJwAACU0AAAUnAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlPAAASnQAAEp0AABKd
        AAASnQAAEp4AABOgABQToQC1ZeBT9hKfAMwSngBQEZoAAP///wD///8AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACU8AABOgAAAToAAAE6EAABOiAAATowAnE6MAzBOh
        AFASngAAEZoAAP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A4AAPAOAADwDgAA8A/Af/APgH/wDwA/8A4AH/AMAA
        /wCAAH8AgAA/AIDAPwDB4B8A4+APAP/wBwD/+AMA//wDAP/+AQD//wEA//8BAP//gwD//8cA////AP//
        /wA=
</value>
  </data>
</root>